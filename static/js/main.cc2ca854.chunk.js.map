{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","isNotPressed","pressedKey","keyPressedEventHandler","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,cAAc,EACdC,WAAY,MAHhB,EAcEC,uBAAyB,SAACC,GACpBA,EAAMC,KACR,EAAKC,SAAS,CACZL,cAAc,EACdC,WAAYE,EAAMC,OAlB1B,uDAME,WACEE,SAASC,iBAAiB,QAASC,KAAKN,0BAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,0BAX/C,oBAuBE,WACE,MAAqCM,KAAKT,MAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAEtB,OACE,sBAAKS,UAAU,MAAf,UACE,qCACCV,EACG,wDAEC,yDAA4BC,YAhCzC,GAAyBU,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.cc2ca854.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component<{}> {\n  state = {\n    isNotPressed: true,\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPressedEventHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyPressedEventHandler);\n  }\n\n  keyPressedEventHandler = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({\n        isNotPressed: false,\n        pressedKey: event.key,\n      });\n    }\n  };\n\n  render() {\n    const { isNotPressed, pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>App</h1>\n        {isNotPressed\n          ? <p>Nothing was pressed yet</p>\n          // eslint-disable-next-line react/jsx-one-expression-per-line\n          : (<p>The last pressed key is {pressedKey}</p>)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}